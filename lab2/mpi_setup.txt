The process for setting it up to run the first time for each user is
cumbersome.  After the initial user set-up it works well without much
fuss.

# login as self
# make file .mpd.conf  vi/emacs/pico .mpd.conf    
# in it write one line:
secretword=<secretword>

where <secretword> is a secure key you create but not your normal password
save the file

# set the correct permissions on this file (other permissions won't work)
chmod 600 .mpd.conf

# create the mpd.hosts file in your working directry where you run your 
program. The file should include a list of uw1-320 machines as seen in
~css534/lab2/mpd.hosts:

uw1-320-10.uwb.edu
uw1-320-11.uwb.edu
uw1-320-12.uwb.edu
uw1-320-13.uwb.edu

edit .bash_profile file - add mpich path to $PATH 
PATH=/usr/apps/mpich121-`uname -p`/bin:$PATH
export $PATH

either relogin or type at the command line:
export PATH=/usr/apps/mpich121-`uname -p`/bin:$PATH

# test that your set-up works on the current host
mpd &
mpiexec -n 1 /bin/hostname
mpdallexit

# if you get an error or warning this is a problem.  
# You should get the hostname of your current host

**  Need to be able to ssh without a password to other machines in order to
use MPICH.  If this is not already set up:
**************************************************************************
**  ssh-keygen -t rsa                                                   **
**  #  at "Enter file in which to save key", <enter> to accept default  **
**  #  at "Enter passphrase" <enter> to keep the passphrase empty.      **
**  #  do the same thing again                                          **
**  #  then go to the .ssh directory                                    **
**  # and change the name of id_rsa.pub to authorized_keys              **
**  cd .ssh                                                             **
**  mv id_rsa.pub authorized_keys                                       **
**  # ssh to all lab machines to set up                                 **
**  # first ssh need to respond "yes" to "continue connecting"          **
**************************************************************************

The first time a new host is added to the first "ring"; it needs to be
established by a "yes" response to "continue connecting".  Every time the
output hangs, type "yes".

You can get all 32 hosts by starting a ring of 4 and typing "yes" 4
times, then starting a ring of 8 (the original 4 plus 4 more) and
typing "yes" 4 times.  After the initial 8, I had to add one at a
time, with the new host always being the last.

Once you have added all the hosts in this way, you never have to type
"yes" again, they were all established for mpich.

mpdboot -n 4 -v
mpdallexit
mpdboot -n 8 -v
mpdallexit
mpdboot -n 16 -v
mpdallexit

Note that you have to list 8 or 16 machine names in your mpd.hosts file
before typeing "mpdboot -n 8" or "mpdboot -n 16".

